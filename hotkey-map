#!/usr/bin/env python3
# this is a separate script so that you don't need to restart remap.py to change it on the fly

# ln -s /home/poleguy/flippy-data/2023/remap/

import subprocess
import os
import time
import pyautogui

     

# https://python-evdev.readthedocs.io/en/latest/tutorial.html

def main(keycode):

    OBS_WEBSOCKET_PASSWORD = "mrnSTlSSX1xl5aBD"
    
    if keycode == 'KEY_ESC':
        bash_detached("/home/poleguy/.local/bin/hotkey-teams")
    if keycode == 'KEY_CALC':
        print("Hello, world!")
        bash_detached("/home/poleguy/.local/bin/hotkey-python3")
    if keycode == 'KEY_TAB':
        bash_detached("/home/poleguy/.local/bin/hotkey-obs")
    if keycode == 'KEY_EQUAL':
        bash_detached("/home/poleguy/.local/bin/hotkey-vscode")
    if keycode == 'KEY_KPSLASH':
        bash_detached("emacs /home/poleguy/flippy-data/2023/remap/hotkey-map")        
    if keycode == 'KEY_KPASTERISK':
        bash_detached('espeak "Undefined. Press edit key to define."')
    if keycode == 'KEY_BACKSPACE':
        bash_detached('espeak "Undefined. Press edit key to define."')
    if keycode == 'KEY_KPDOT':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 scene switch "Zoom and Tablet"')
    if keycode == 'KEY_KP0':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 scene switch "Tele"')
    if keycode == 'KEY_KP1':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 scene switch "Zoom"')
    if keycode == 'KEY_KP2':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 scene switch "Share Left"')
    if keycode == 'KEY_KP3':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 scene switch "Soldering"')
    if keycode == 'KEY_KP4':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 scene switch "Share Tablet"')
    if keycode == 'KEY_KP5':
        #bash_detached('xdg-open /home/poleguy/fpga-data/2024/nullboard/nullboard.html')
        bash_detached('espeak "Undefined. Press edit key to define."')
    if keycode == 'KEY_KP6':
        bash_detached('espeak "Resetting tablet pen mapping."')
        bash_detached('xinput --map-to-output "Tablet Monitor Pen Pen (0)" DP-3')
        bash_detached("/home/poleguy/flippy-data/2023/remap/hotkey-krita")
        # move stuff off of tablet, except Krita
        bash_detached('python3 /home/poleguy/flippy-data/sweep/move_windows/move_windows.py')
        pass
    if keycode == 'KEY_KP7':
        # mute
        #bash_detached("amixer set 'Front-Panel',0 nocap; amixer set 'Rear-Panel',0 nocap")
        #bash_detached("amixer set 'Front-Panel',0 nocap; amixer set 'Rear-Panel',0 nocap")
        # mute teams    
        bash_detached("/home/poleguy/.local/bin/hotkey-teams-toggle-mute")
        #pyautogui.write('Hello world!', interval=0.005)  #
    if keycode == 'KEY_KP8':
        bash_detached(f'obs-cli -p {OBS_WEBSOCKET_PASSWORD} -P 4455 -H 192.168.1.162 filter toggle teleprompter Freeze')

    if keycode == 'KEY_KP9':
        bash_detached('xrandr --output HDMI-0 --mode 2560x1440 --pos 2560x0 --rate 60.00')
        time.sleep(16)
        bash_detached('xrandr --output HDMI-0 --mode 3840x2160 --pos 2560x0 --rate 60.00')

        
        # try to reset black screen as well
        bash_detached('obs-cli -p mrnSTlSSX1xl5aBD -P 4455 -H 192.168.1.162 input set teleprompter  "Exposure Time, Absolute" 750')
        
        # fix tablet:
        
        bash_detached('xinput --map-to-output "Tablet Monitor Pen stylus" DP-3')

        # move stuff off of tablet, except Krita
        bash_detached('python3 /home/poleguy/flippy-data/sweep/move_windows/move_windows.py')
        #bash_detached('espeak "done"')

    if keycode == 'KEY_KPMINUS':
        # bring volume down faster than we bring it back up.
        # This lets you pull it down quickly, but still be able to dial it in accurately.
        bash_detached('pavucontrol')
        bash_detached("amixer set Front 3dB-")
        #bash_detached('espeak "bloop"') # this would probably get old quickly
        
    if keycode == 'KEY_KPPLUS':
        bash_detached('pavucontrol')
        bash_detached("amixer set Front 1.5dB+")
        #bash_detached('espeak "bleep"') # this would probably get old quickly
        
    if keycode == 'KEY_KPENTER':                            
        bash_detached('espeak "We are closer than we\'ve ever been before"')


        # other ideas:
        #bash_detached('xrandr --output HDMI-0 --mode 3840x2160 --pos 2560x2 --rate 59.94 --off; sleep 8; xrandr --output HDMI-0 --mode 3840x2160 --pos 2560x0 --rate 60.00 --auto')
        #bash_detached('xrandr --output HDMI-0 --mode 2560x1440 --pos 2560x0 --rate 60.00 --auto')
        #bash_detached('xrandr --output HDMI-0 --off')

        #time.sleep(4)
        #bash_detached('xrandr --output HDMI-0 --mode 3840x2160 --pos 2560x0 --rate 60.00 --auto')

        # to debug:
        #with open('/tmp/stderr.txt', 'w') as f:
        #    subprocess.Popen('XDG_RUNTIME_DIR=/run/user/1000 espeak "help" > /tmp/stdout.txt', stderr=f, shell=True)
        #bash_detached('env > /tmp/blah.txt')

def bash_detached(cmd):
    # prevent all programs run via remap.py via systemd from dying if you unplug or otherwise kill remap.py
    subprocess.Popen(f"systemd-run --user --scope {cmd}", shell=True) #, env=os.environ)
    # https://stackoverflow.com/questions/6011235/run-a-program-from-python-and-have-it-continue-to-run-after-the-script-is-kille/60514518#60514518
    # didn't work: def spawn_daemon(func):
    # notes:
    # https://stackoverflow.com/questions/32208782/cant-detach-child-process-when-main-process-is-started-from-systemd
    # https://superuser.com/questions/178587/how-do-i-detach-a-process-from-terminal-entirely/178592#178592
    # https://stackoverflow.com/questions/71439704/how-to-start-another-program-and-keep-it-running-after-python-script-finishes
    # https://stackoverflow.com/questions/13592219/launch-a-totally-independent-process-from-python
    # https://stackoverflow.com/questions/11585168/launch-an-independent-process-with-python
    # https://stackoverflow.com/questions/11585168/launch-an-independent-process-with-python
    # https://stackoverflow.com/questions/75592650/start-a-process-from-a-systemd-service-that-wont-be-killed-when-the-service-is

    
if __name__ == "__main__":
    import typer
    typer.run(main)


